class Node:
    def __init__(self,data):
        self.next=None
        self.data=data
    

class Linkedlist:
    def __init__(self):
        self.head=None
    def insert(self,element):
        new_node=Node(element)
        if(self.head is None):
            self.head=new_node
            return
        t=self.head    
        while(t.next):
            t=t.next
            
        t.next=new_node  
        
    def traverse(self):
        temp=self.head
        while(temp):
            print(temp.data,end=" ")
            temp=temp.next
           

merge(LL1,LL2):
    c1,c2=1
    k=LL1.head
    l=LL2.head
    while(c1<Length(LL1)+1 and c2<Length(LL2)+1):
        if(k.data<l.data):
            LL3.insert(k)
            k=k.next
            c1=c1+1
        else:
            LL3.insert(l)
            l.next
            c2=c2+1
    while(c1<Length(LL1)+1):
        LL3.insert(k)
        k=k.next
        c1=c1+1
    while(c2<Length(LL2)+1):
        LL3.insert(l)
        l=l.next
        c2=c2+1
        
            
            
    
LL1=Linkedlist()
LL1.insert(10)
LL1.insert(20)
LL1.insert(30)
LL1.traverse()
LL2=Linkedlist()
LL2.insert(5)
LL2.insert(6)
LL2.insert(7)
print()
LL2.traverse()
LL3=Linkedlist()
merge(LL1,LL2):
    


        
     
    
    